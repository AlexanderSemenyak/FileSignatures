<?xml version="1.0" encoding="utf-8"?>
<assemblies>
  <assembly name="FileSignatures.Tests.dll" environment="64-bit .NET (unknown version) [collection-per-class, parallel (4 threads)]" test-framework="xUnit.net 2.2.0.3300" run-date="2017-01-03" run-time="13:12:22" total="31" passed="31" failed="0" skipped="0" time="0.149" errors="0">
    <errors />
    <collection total="1" passed="1" failed="0" skipped="0" name="Test collection for FileSignatures.Tests.FileFormatLocatorTests" time="0.015">
      <test name="LocatesConcreteFormatsInAssembly" type="FileSignatures.Tests.FileFormatLocatorTests" method="LocatesConcreteFormatsInAssembly" time="0.0154675" result="Pass" />
    </collection>
    <collection total="5" passed="5" failed="0" skipped="0" name="Test collection for FileSignatures.Tests.FileFormatInspectorTests" time="0.025">
      <test name="MostSpecificFormatIsReturned" type="FileSignatures.Tests.FileFormatInspectorTests" method="MostSpecificFormatIsReturned" time="0.0200334" result="Pass" />
      <test name="StreamIsNotFullyReadUnlessRequired" type="FileSignatures.Tests.FileFormatInspectorTests" method="StreamIsNotFullyReadUnlessRequired" time="0.0028839" result="Pass" />
      <test name="SingleMatchIsReturned" type="FileSignatures.Tests.FileFormatInspectorTests" method="SingleMatchIsReturned" time="0.0004605" result="Pass" />
      <test name="UnrecognisedReturnsNull" type="FileSignatures.Tests.FileFormatInspectorTests" method="UnrecognisedReturnsNull" time="0.0005387" result="Pass" />
      <test name="StreamIsReadUntilRequiredBufferIsReceived" type="FileSignatures.Tests.FileFormatInspectorTests" method="StreamIsReadUntilRequiredBufferIsReceived" time="0.0006404" result="Pass" />
    </collection>
    <collection total="9" passed="9" failed="0" skipped="0" name="Test collection for FileSignatures.Tests.FileFormatTests" time="0.014">
      <test name="MediaTypeCannotBeNullOrEmpty(badMediaType: null)" type="FileSignatures.Tests.FileFormatTests" method="MediaTypeCannotBeNullOrEmpty" time="0.0072955" result="Pass" />
      <test name="MediaTypeCannotBeNullOrEmpty(badMediaType: \&quot;\&quot;)" type="FileSignatures.Tests.FileFormatTests" method="MediaTypeCannotBeNullOrEmpty" time="0.0000933" result="Pass" />
      <test name="EqualityIsBasedOnSignature" type="FileSignatures.Tests.FileFormatTests" method="EqualityIsBasedOnSignature" time="0.0018229" result="Pass" />
      <test name="GetHashCodeIsBasedOnSignature" type="FileSignatures.Tests.FileFormatTests" method="GetHashCodeIsBasedOnSignature" time="0.0029015" result="Pass" />
      <test name="MatchesHeaderContainingSignature" type="FileSignatures.Tests.FileFormatTests" method="MatchesHeaderContainingSignature" time="0.0008104" result="Pass" />
      <test name="DoesNotMatchDifferentHeader(header: [111])" type="FileSignatures.Tests.FileFormatTests" method="DoesNotMatchDifferentHeader" time="0.0006381" result="Pass" />
      <test name="DoesNotMatchDifferentHeader(header: [60, 111])" type="FileSignatures.Tests.FileFormatTests" method="DoesNotMatchDifferentHeader" time="0.0000166" result="Pass" />
      <test name="SignatureCannotBeNullOrEmpty(badSignature: null)" type="FileSignatures.Tests.FileFormatTests" method="SignatureCannotBeNullOrEmpty" time="0.0004246" result="Pass" />
      <test name="SignatureCannotBeNullOrEmpty(badSignature: [])" type="FileSignatures.Tests.FileFormatTests" method="SignatureCannotBeNullOrEmpty" time="0.0000457" result="Pass" />
    </collection>
    <collection total="16" passed="16" failed="0" skipped="0" name="Test collection for FileSignatures.Tests.FunctionalTests" time="0.026">
      <test name="SamplesAreRecognised(sample: \&quot;bmp\&quot;, expected: \&quot;image/bmp\&quot;)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0157267" result="Pass" />
      <test name="SamplesAreRecognised(sample: \&quot;doc\&quot;, expected: \&quot;application/msword\&quot;)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0004791" result="Pass" />
      <test name="SamplesAreRecognised(sample: \&quot;docx\&quot;, expected: \&quot;application/vnd.openxmlformats-officedocument.word\&quot;...)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0012401" result="Pass" />
      <test name="SamplesAreRecognised(sample: \&quot;exe\&quot;, expected: \&quot;application/octet-stream\&quot;)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0002016" result="Pass" />
      <test name="SamplesAreRecognised(sample: \&quot;gif\&quot;, expected: \&quot;image/gif\&quot;)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0001699" result="Pass" />
      <test name="SamplesAreRecognised(sample: \&quot;jpg\&quot;, expected: \&quot;image/jpeg\&quot;)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0001683" result="Pass" />
      <test name="SamplesAreRecognised(sample: \&quot;pdf\&quot;, expected: \&quot;application/pdf\&quot;)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0003501" result="Pass" />
      <test name="SamplesAreRecognised(sample: \&quot;rtf\&quot;, expected: \&quot;application/rtf\&quot;)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0002045" result="Pass" />
      <test name="SamplesAreRecognised(sample: \&quot;png\&quot;, expected: \&quot;image/png\&quot;)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0001548" result="Pass" />
      <test name="SamplesAreRecognised(sample: \&quot;ppt\&quot;, expected: \&quot;application/vnd.ms-powerpoint\&quot;)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0002359" result="Pass" />
      <test name="SamplesAreRecognised(sample: \&quot;pptx\&quot;, expected: \&quot;application/vnd.openxmlformats-officedocument.pres\&quot;...)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0005887" result="Pass" />
      <test name="SamplesAreRecognised(sample: \&quot;tif\&quot;, expected: \&quot;image/tiff\&quot;)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0001629" result="Pass" />
      <test name="SamplesAreRecognised(sample: \&quot;xls\&quot;, expected: \&quot;application/vnd.ms-excel\&quot;)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0049259" result="Pass" />
      <test name="SamplesAreRecognised(sample: \&quot;xlsx\&quot;, expected: \&quot;application/vnd.openxmlformats-officedocument.spre\&quot;...)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0004502" result="Pass" />
      <test name="SamplesAreRecognised(sample: \&quot;xps\&quot;, expected: \&quot;application/vnd.ms-xpsdocument\&quot;)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0003697" result="Pass" />
      <test name="SamplesAreRecognised(sample: \&quot;zip\&quot;, expected: \&quot;application/zip\&quot;)" type="FileSignatures.Tests.FunctionalTests" method="SamplesAreRecognised" time="0.0002058" result="Pass" />
    </collection>
  </assembly>
</assemblies>